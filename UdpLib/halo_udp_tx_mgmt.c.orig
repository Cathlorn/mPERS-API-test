//10/24/2011
//CLS (Halo Monitoring)
//Manages holding data pkts desired to be transmitted.
//It remembers what has been sent until an acknowlegement is received from the target
//That it has been sent successfully

#include "tx_buffer.h"
#include "halo_udp_tx_mgmt.h"

int enqueue_tx_packet(HaloUdpTxMgmt *txMgmt, uint8 *data, int len, uint16 seqNum)
{
    int success = FAIL;

    if(!txMgmt->pendingTx)
    {
        txMgmt->pendingTxData   = data;
        txMgmt->pendingTxLen    = len;
        txMgmt->pendingTxSeqNum = seqNum;
        txMgmt->pendingTx       = 1;
        success = SUCCESS;
    }

    return success;
}

int peek_tx_packet(HaloUdpTxMgmt *txMgmt, uint8 **data, int *len, uint16 *seqNum)
{
    int success = FAIL;

    if(txMgmt->pendingTx)
    {
        *data = txMgmt->pendingTxData;
        *len = txMgmt->pendingTxLen;
        *seqNum = txMgmt->pendingTxSeqNum;

        success = SUCCESS;
    }

    return success;
}

int dequeue_tx_packet(HaloUdpTxMgmt *txMgmt, uint16 seqNum)
{
    int success = FAIL;

    if(txMgmt->pendingTx)
    {
        if(txMgmt->pendingTxSeqNum == seqNum) //Make sure that the sequence number is in the list of pending tx msgs
        {
          txMgmt->pendingTx = 0;
          success = SUCCESS;
        }
    }

    return success;
}

int pending_tx_packet(HaloUdpTxMgmt *txMgmt)
{
    return txMgmt->pendingTx;
}
